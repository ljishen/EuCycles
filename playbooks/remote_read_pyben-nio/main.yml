---
- name: ensure common prerequisites
  hosts: all
  any_errors_fatal: true
  roles:
    - { role: ../common/roles/prerequisites, become: yes }
  tasks:
    - name: install Pyben-nio
      git:
        clone: yes
        depth: 1
        dest: "{{ workdir }}/pyben-nio"
        force: yes
        recursive: no
        repo: https://github.com/ljishen/pyben-nio.git
        update: yes
        version: HEAD
      async: 30
      poll: 0
    - name: install perf
      become: yes
      apt:
        install_recommends: no
        name:
          - linux-tools-common
          - linux-tools-{{ ansible_kernel }}
        state: latest
        cache_valid_time: "{{ 24 * 60 * 60 }}"  # cache valid for one day
      async: "{{ 2 * 60 }}"
      poll: 2
    - name: check kernel boot parameters
      set_fact:
        boot_params_invalid: >
          {{ 'nr_cpus' not in ansible_cmdline or ansible_cmdline.nr_cpus != '3' or 'isolcpus' not in ansible_cmdline or ansible_cmdline.isolcpus != '1,2' }}
    - name: check number of vCPUs
      command: nproc
      register: cmd_nproc
      when: boot_params_invalid
    - debug: msg="The system has only {{ cmd_nproc.stdout }} (< 3) virtual processors"
      when: cmd_nproc is defined and cmd_nproc.stdout | int < 3 and boot_params_invalid
      failed_when: true
    - name: update kernel boot parameters
      become: yes
      command: >
        sed -i 's/\(GRUB_CMDLINE_LINUX_DEFAULT=\).*$/\1"nr_cpus=3 isolcpus=1,2"/' /etc/default/grub
        && update-grub
      when: boot_params_invalid
      async: 10
      poll: 2

- name: reboot if servers boot parameters updated
  hosts: servers
  any_errors_fatal: true
  become: yes
  tasks:
    - command: reboot
      when: boot_params_invalid

- name: reboot if client boot parameters updated
  hosts: client
  any_errors_fatal: true
  become: yes
  tasks:
    - command: reboot
      when: boot_params_invalid

- hosts: all
  tasks:
    - debug: msg="Exit if reboot scheduled."
      failed_when: boot_params_invalid

- name: config CPUs for IRQ handling
  hosts: all
  any_errors_fatal: true
  become: yes
  tasks:
    - name: config SMP IRQ affinity for network interrupts
      shell: >
        scripts/net_smp_affinity {{ net_dev_in_count }} {{ net_dev_in_count_cpu_mask }}
        &&
        scripts/net_smp_affinity {{ net_dev_out_of_count }} {{ net_dev_out_of_count_cpu_mask }}
    - name: stop irqbalance service
      service:
        name: irqbalance
        state: stopped

- hosts: servers
  any_errors_fatal: true
  vars:
    data_file_path: "{{ workdir }}/{{ server_data_filename }}"
  tasks:
    - name: delete obsolate data file
      file:
        path: "{{ data_file_path }}"
        state: absent
      when: force_create_data_file
    - name: create {{ server_data_file_size }} data file for read by the server
      command: >
        {{ workdir }}/pyben-nio/src/tools.py {{ server_data_file_size }}
        --filename {{ workdir }}/{{ server_data_filename }}
      args:
        creates: "{{ workdir }}/{{ server_data_filename }}"
      async: "{{ 10 * 60 * 60 }}"
      poll: 30

- name: run bench
  hosts: localhost
  vars:
    output_dir: "{{ playbook_dir }}/output"
  tasks:
    - include_tasks: ../common/tasks/run_bench.yml
