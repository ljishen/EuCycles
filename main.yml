---
- name: ensure all prerequisites
  hosts: all
  roles:
    - { role: angstwad.docker_ubuntu, become: yes, tags: 'install_docker' }
  tasks:
    - name: ensure the presence of workdir {{ workdir }}
      file:
        path: "{{ workdir }}"
        state: directory

- name: deploy iPerf3 server
  hosts: server
  vars:
    data_file_path: "{{ workdir }}/{{ data_file_name }}"
  tasks:
    - name: delete obsolate data file
      file:
        path: "{{ data_file_path }}"
        state: absent
    - name: create data file for read by the iPerf3 server
      command: fallocate -l {{ data_file_size }} {{ data_file_path }}
    - name: start the iPerf3 server
      become: yes
      docker_container:
        cleanup: yes
        command: >
          /root/results/server_iperf3.log
          --server
          --file /root/results/{{ data_file_name }}
          --bind {{ hostvars[inventory_hostname]['ansible_' + server_outbound_interface]['ipv4']['address'] }}
        detach: yes
        force_kill: yes
        image: ljishen/iperf3
        name: iperf3
        network_mode: host
        pull: yes
        recreate: yes
        state: started
        volumes:
          - "{{ workdir }}:/root/results"

- name: install iPerf3 to client
  hosts: client
  any_errors_fatal: true
  tasks:
    - name: download iPerf3 installer
      get_url:
        dest: "{{ workdir }}"
        force: yes
        mode: u+x
        url: https://raw.githubusercontent.com/ljishen/BSFD/master/benchmarks/iperf3/run.sh
    - name: delete obsolate installation dirs of iPerf3
      shell: rm -rf {{ workdir }}/iperf-3*
      args:
        warn: no
    - name: install iPerf3 to {{ workdir }}
      shell: yes | ./run.sh --install
      args:
        chdir: "{{ workdir }}"
    - name: get absolute installation dir of iPerf3
      # This step ensures we can find installation dir even
      # if we upgraded the version of iPerf3
      shell: realpath {{ workdir }}/iperf-3.*
      register: iperf3_abs_dir
    - name: generate the {{ iperf3_abs_dir.stdout }}/src/.libs/lt-iperf3
      # This step can't be postponed until the execution inside the container
      # because the execution program is generated during the installation
      # and some configuration pathes does not match within the container.
      # The following errors will be shown if this step is omitted:
      #   iperf-3.5/src/iperf3: line 202: cd: /home/cc/workdir/iperf-3.5/src: No such file or directory
      #   iperf-3.5/src/iperf3: line 202: gcc: command not found
      # See the script: {{ iperf3_abs_dir.stdout }}/src/iperf3
      command: "{{ iperf3_abs_dir.stdout }}/src/iperf3 --version"

- name: run tests
  hosts: client
  become: yes
  any_errors_fatal: true
  tasks:
    - name: perf stat the iPerf3 client
      include_tasks: library/perf_iperf3_client.yml
      loop: "{{ transmission_size }}"
      loop_control:
        loop_var: bytes
  handlers:
    - name: drop file cache
      # See https://www.kernel.org/doc/Documentation/sysctl/vm.txt
      shell: sync && echo 3 > /proc/sys/vm/drop_caches
      delegate_to: "{{ hostvars[groups['server'][0]]['inventory_hostname'] }}"
